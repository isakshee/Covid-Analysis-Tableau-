<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20223.22.1005.1835                               -->
<workbook original-version='18.1' source-build='2022.3.0 (20223.22.1005.1835)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='categories' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='70800001'>
        <calculation class='tableau' formula='70800001' />
        <range granularity='100000' max='98166904' min='1' />
      </column>
    </datasource>
    <datasource caption='zomato' inline='true' name='federated.1bik5ws0ppg7vn1bzrv3a092i5mh' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='COVID' name='textscan.188hkvp0c99rk515o0m3m1tc3p7r'>
            <connection class='textscan' directory='C:/Users/yashv/Documents/My Project Work/Covid analysis Project' filename='Covid Live.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.188hkvp0c99rk515o0m3m1tc3p7r' name='Covid Live.csv' table='[Covid Live#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='#' ordinal='0' />
            <column datatype='string' name='Country,_Other' ordinal='1' />
            <column datatype='integer' name='Total_Cases' ordinal='2' />
            <column datatype='integer' name='Total_Deaths' ordinal='3' />
            <column datatype='integer' name='New_Deaths' ordinal='4' />
            <column datatype='string' name='Total_Recovered' ordinal='5' />
            <column datatype='string' name='Active_Cases' ordinal='6' />
            <column datatype='integer' name='Serious,_Critical' ordinal='7' />
            <column datatype='integer' name='Tot Cases/_1M pop' ordinal='8' />
            <column datatype='integer' name='Deaths/_1M pop' ordinal='9' />
            <column datatype='integer' name='Total_Tests' ordinal='10' />
            <column datatype='integer' name='Tests/_1M pop' ordinal='11' />
            <column datatype='integer' name='Population' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.188hkvp0c99rk515o0m3m1tc3p7r' name='Covid Live.csv' table='[Covid Live#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='#' ordinal='0' />
            <column datatype='string' name='Country,_Other' ordinal='1' />
            <column datatype='integer' name='Total_Cases' ordinal='2' />
            <column datatype='integer' name='Total_Deaths' ordinal='3' />
            <column datatype='integer' name='New_Deaths' ordinal='4' />
            <column datatype='string' name='Total_Recovered' ordinal='5' />
            <column datatype='string' name='Active_Cases' ordinal='6' />
            <column datatype='integer' name='Serious,_Critical' ordinal='7' />
            <column datatype='integer' name='Tot Cases/_1M pop' ordinal='8' />
            <column datatype='integer' name='Deaths/_1M pop' ordinal='9' />
            <column datatype='integer' name='Total_Tests' ordinal='10' />
            <column datatype='integer' name='Tests/_1M pop' ordinal='11' />
            <column datatype='integer' name='Population' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Covid Live.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>#</remote-name>
            <remote-type>20</remote-type>
            <local-name>[#]</local-name>
            <parent-name>[Covid Live.csv]</parent-name>
            <remote-alias>#</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid Live.csv_B683E36D722546E2A44268F7C53C1234]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country,_Other</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country,_Other]</local-name>
            <parent-name>[Covid Live.csv]</parent-name>
            <remote-alias>Country,_Other</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid Live.csv_B683E36D722546E2A44268F7C53C1234]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_Cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_Cases]</local-name>
            <parent-name>[Covid Live.csv]</parent-name>
            <remote-alias>Total_Cases</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid Live.csv_B683E36D722546E2A44268F7C53C1234]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_Deaths]</local-name>
            <parent-name>[Covid Live.csv]</parent-name>
            <remote-alias>Total_Deaths</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid Live.csv_B683E36D722546E2A44268F7C53C1234]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New_Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[New_Deaths]</local-name>
            <parent-name>[Covid Live.csv]</parent-name>
            <remote-alias>New_Deaths</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid Live.csv_B683E36D722546E2A44268F7C53C1234]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_Recovered</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Total_Recovered]</local-name>
            <parent-name>[Covid Live.csv]</parent-name>
            <remote-alias>Total_Recovered</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid Live.csv_B683E36D722546E2A44268F7C53C1234]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Active_Cases</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Active_Cases]</local-name>
            <parent-name>[Covid Live.csv]</parent-name>
            <remote-alias>Active_Cases</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid Live.csv_B683E36D722546E2A44268F7C53C1234]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Serious,_Critical</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Serious,_Critical]</local-name>
            <parent-name>[Covid Live.csv]</parent-name>
            <remote-alias>Serious,_Critical</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid Live.csv_B683E36D722546E2A44268F7C53C1234]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tot Cases/_1M pop</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tot Cases/_1M pop]</local-name>
            <parent-name>[Covid Live.csv]</parent-name>
            <remote-alias>Tot Cases/_1M pop</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid Live.csv_B683E36D722546E2A44268F7C53C1234]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths/_1M pop</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths/_1M pop]</local-name>
            <parent-name>[Covid Live.csv]</parent-name>
            <remote-alias>Deaths/_1M pop</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid Live.csv_B683E36D722546E2A44268F7C53C1234]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_Tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_Tests]</local-name>
            <parent-name>[Covid Live.csv]</parent-name>
            <remote-alias>Total_Tests</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid Live.csv_B683E36D722546E2A44268F7C53C1234]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tests/_1M pop</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tests/_1M pop]</local-name>
            <parent-name>[Covid Live.csv]</parent-name>
            <remote-alias>Tests/_1M pop</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid Live.csv_B683E36D722546E2A44268F7C53C1234]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Covid Live.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid Live.csv_B683E36D722546E2A44268F7C53C1234]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Active Cases' datatype='string' name='[Active_Cases]' role='dimension' type='nominal' />
      <column caption='total cases' datatype='string' name='[Calculation_522699045401501696]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if [Parameters].[Parameter 1]&gt;70000000 THEN &quot;RED ZONE&quot;&#13;&#10;ELSE &quot;YELLOW ZONE&quot;&#13;&#10;END' />
      </column>
      <column caption='Country, Other' datatype='string' name='[Country,_Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Deaths/ 1M pop' datatype='integer' name='[Deaths/_1M pop]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='integer' name='[New_Deaths]' role='measure' type='quantitative' />
      <column caption='Serious, Critical' datatype='integer' name='[Serious,_Critical]' role='measure' type='quantitative' />
      <column caption='Tests/ 1M pop' datatype='integer' name='[Tests/_1M pop]' role='measure' type='quantitative' />
      <column caption='Tot Cases/ 1M pop' datatype='integer' name='[Tot Cases/_1M pop]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[Total_Cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[Total_Deaths]' role='measure' type='quantitative' />
      <column caption='Total Recovered' datatype='string' name='[Total_Recovered]' role='dimension' type='nominal' />
      <column caption='Total Tests' datatype='integer' name='[Total_Tests]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Covid Live.csv' datatype='table' name='[__tableau_internal_object_id__].[Covid Live.csv_B683E36D722546E2A44268F7C53C1234]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_522699045401501696]' derivation='None' name='[none:Calculation_522699045401501696:nk]' pivot='key' type='nominal' />
      <column-instance column='[Total_Recovered]' derivation='None' name='[none:Total_Recovered:nk]' pivot='key' type='nominal' />
      <group caption='Action (Country, Other)' hidden='true' name='[Action (Country, Other)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country,_Other]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Total_Recovered:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;1,211,397&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;13,182&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;182,306&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;2,014,175&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;21,143&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;4,641,394&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;43,982&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;442,182&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;7&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;84,872&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;891,237&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1,648,405&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;10,063&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;134,745&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;17,264&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;3,914,598&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;32,315,200&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;329,375&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;6,132&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;65,242&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;655,316&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;1,102,548&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;1,821,160&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;10,773&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;167,307&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;19,403&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;36,880&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;384,669&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;4,225&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;6,353,953&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;71,955&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;787&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;1,353&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;15,166&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;2,548,125&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;24,006&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;241,486&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;4,836,903&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;46,446&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;504,142&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;8,305&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;94,962,112&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;979,439&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;1,216,151&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;13,218,892&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;196,406&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;2,298,536&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;21,779,604&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;4,642,083&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;44,019,095&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;443,418&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;7,325,370&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;86,297&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;964,320&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;1,102,988&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;1,886&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;11,254&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;174,214&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;19,979,763&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;38,528&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;4,451,569&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;418,572&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;6,384&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;73,823&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;803,546&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;1,605&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;118,616&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;16,690&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;3,854,478&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;31,307&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;322,955&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;5,444&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;61,789&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;638,911&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;9,124&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;1,006,369&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;1,731,007&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;10,133,494&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;157&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;17,335&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;33,838,636&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;332,663&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;4,012,833&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;6,134,690&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;66,302&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;675,724&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;1,469,240&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;101,760&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;16,357&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;276,154&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;28,475&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;3,180,124&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;5,335,940&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;57,290&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;597,898&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;8,923&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;1,145,051&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;1,964,501&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;11,894&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;177,850&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;20,380,089&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;38,786&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;4,540,886&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;430,192&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;6,482&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;80&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;810,181&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;1,378,440&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;15,427&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;2,703&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;24,013,461&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;242,254&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;4,874&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;48,292&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;524,990&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;8,362,464&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;985,592&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;99,239&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;1,399&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;100,431&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;15,638&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;2,761&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;25,980&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;251,281&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;4,973,554&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;49,559&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;538,033&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;8,553&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;986,617&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;1,536,924&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;113,195&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;16,579&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;283,668&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;29&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;3,848&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;5,394,788&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;608,749&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;61,564&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;9&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;1,637,293&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;130,955&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;16,754,301&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;3,909,265&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;31,591&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;326,729&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;5,603,195&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;61,890&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;653,779&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;9,563,348&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;1,248,543&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;14,478&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;2,433,704&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;222,140&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;23,102&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;4,772,739&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;44,720&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;471,918&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;7,636&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;86,338&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;976,760&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;1,209,524&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;12,028&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;179,410&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;2&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;20,524&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;4,605&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;42,438&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;438&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;6,641&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;83,504&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;860,711&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1,051,789&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1,767,660&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;10,476&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;163,687&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;17,969&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;332,806&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;34,527,115&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;4,035,333&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;6,253,317&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;68,079&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;696,110&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;1,457,108&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;101,155&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;15,651&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;258,381&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;27,322&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;3,093,396&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;5,006,572&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;54,078&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;578,452&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;8,890&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;N/A&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;1,263,711&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;14,520&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;2,449&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;227,882&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;23,347,871&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;4,777,329&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;46,011&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;500,507&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;8,301&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;90,639&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;976,873&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;1,087,587&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;1,817,938&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;10,590,917&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;164,813&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;19,248&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;36,070&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;376,654&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;4,131,367&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;6,321&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;69,977&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;699&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_522699045401501696:nk]' type='palette'>
            <map to='#ff0000'>
              <bucket>&quot;RED ZONE&quot;</bucket>
            </map>
            <map to='#ffff00'>
              <bucket>&quot;YELLOW ZONE&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='categories' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='70800001'>
          <calculation class='tableau' formula='70800001' />
          <range granularity='100000' max='98166904' min='1' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Covid Live.csv' id='Covid Live.csv_B683E36D722546E2A44268F7C53C1234'>
            <properties context=''>
              <relation connection='textscan.188hkvp0c99rk515o0m3m1tc3p7r' name='Covid Live.csv' table='[Covid Live#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='#' ordinal='0' />
                  <column datatype='string' name='Country,_Other' ordinal='1' />
                  <column datatype='integer' name='Total_Cases' ordinal='2' />
                  <column datatype='integer' name='Total_Deaths' ordinal='3' />
                  <column datatype='integer' name='New_Deaths' ordinal='4' />
                  <column datatype='string' name='Total_Recovered' ordinal='5' />
                  <column datatype='string' name='Active_Cases' ordinal='6' />
                  <column datatype='integer' name='Serious,_Critical' ordinal='7' />
                  <column datatype='integer' name='Tot Cases/_1M pop' ordinal='8' />
                  <column datatype='integer' name='Deaths/_1M pop' ordinal='9' />
                  <column datatype='integer' name='Total_Tests' ordinal='10' />
                  <column datatype='integer' name='Tests/_1M pop' ordinal='11' />
                  <column datatype='integer' name='Population' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Covid Live' inline='true' name='federated.01g989x1rtc7wy10wh9hj1okno1c' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Covid Live' name='textscan.0v1cf391a345ec15p3fc80xy6yn2'>
            <connection class='textscan' directory='C:/Users/yashv/Documents/My Project Work/Covid analysis Project' filename='Covid Live.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0v1cf391a345ec15p3fc80xy6yn2' name='Covid Live.csv' table='[Covid Live#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='#' ordinal='0' />
            <column datatype='string' name='Country,_Other' ordinal='1' />
            <column datatype='integer' name='Total_Cases' ordinal='2' />
            <column datatype='integer' name='Total_Deaths' ordinal='3' />
            <column datatype='integer' name='New_Deaths' ordinal='4' />
            <column datatype='string' name='Total_Recovered' ordinal='5' />
            <column datatype='string' name='Active_Cases' ordinal='6' />
            <column datatype='integer' name='Serious,_Critical' ordinal='7' />
            <column datatype='integer' name='Tot Cases/_1M pop' ordinal='8' />
            <column datatype='integer' name='Deaths/_1M pop' ordinal='9' />
            <column datatype='integer' name='Total_Tests' ordinal='10' />
            <column datatype='integer' name='Tests/_1M pop' ordinal='11' />
            <column datatype='integer' name='Population' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0v1cf391a345ec15p3fc80xy6yn2' name='Covid Live.csv' table='[Covid Live#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='#' ordinal='0' />
            <column datatype='string' name='Country,_Other' ordinal='1' />
            <column datatype='integer' name='Total_Cases' ordinal='2' />
            <column datatype='integer' name='Total_Deaths' ordinal='3' />
            <column datatype='integer' name='New_Deaths' ordinal='4' />
            <column datatype='string' name='Total_Recovered' ordinal='5' />
            <column datatype='string' name='Active_Cases' ordinal='6' />
            <column datatype='integer' name='Serious,_Critical' ordinal='7' />
            <column datatype='integer' name='Tot Cases/_1M pop' ordinal='8' />
            <column datatype='integer' name='Deaths/_1M pop' ordinal='9' />
            <column datatype='integer' name='Total_Tests' ordinal='10' />
            <column datatype='integer' name='Tests/_1M pop' ordinal='11' />
            <column datatype='integer' name='Population' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Covid Live.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>#</remote-name>
            <remote-type>20</remote-type>
            <local-name>[#]</local-name>
            <parent-name>[Covid Live.csv]</parent-name>
            <remote-alias>#</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid Live.csv_44EFB59B7D29452993998AF5B1A3E0C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country,_Other</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country,_Other]</local-name>
            <parent-name>[Covid Live.csv]</parent-name>
            <remote-alias>Country,_Other</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid Live.csv_44EFB59B7D29452993998AF5B1A3E0C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_Cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_Cases]</local-name>
            <parent-name>[Covid Live.csv]</parent-name>
            <remote-alias>Total_Cases</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid Live.csv_44EFB59B7D29452993998AF5B1A3E0C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_Deaths]</local-name>
            <parent-name>[Covid Live.csv]</parent-name>
            <remote-alias>Total_Deaths</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid Live.csv_44EFB59B7D29452993998AF5B1A3E0C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New_Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[New_Deaths]</local-name>
            <parent-name>[Covid Live.csv]</parent-name>
            <remote-alias>New_Deaths</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid Live.csv_44EFB59B7D29452993998AF5B1A3E0C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_Recovered</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Total_Recovered]</local-name>
            <parent-name>[Covid Live.csv]</parent-name>
            <remote-alias>Total_Recovered</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid Live.csv_44EFB59B7D29452993998AF5B1A3E0C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Active_Cases</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Active_Cases]</local-name>
            <parent-name>[Covid Live.csv]</parent-name>
            <remote-alias>Active_Cases</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid Live.csv_44EFB59B7D29452993998AF5B1A3E0C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Serious,_Critical</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Serious,_Critical]</local-name>
            <parent-name>[Covid Live.csv]</parent-name>
            <remote-alias>Serious,_Critical</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid Live.csv_44EFB59B7D29452993998AF5B1A3E0C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tot Cases/_1M pop</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tot Cases/_1M pop]</local-name>
            <parent-name>[Covid Live.csv]</parent-name>
            <remote-alias>Tot Cases/_1M pop</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid Live.csv_44EFB59B7D29452993998AF5B1A3E0C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths/_1M pop</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths/_1M pop]</local-name>
            <parent-name>[Covid Live.csv]</parent-name>
            <remote-alias>Deaths/_1M pop</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid Live.csv_44EFB59B7D29452993998AF5B1A3E0C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_Tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_Tests]</local-name>
            <parent-name>[Covid Live.csv]</parent-name>
            <remote-alias>Total_Tests</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid Live.csv_44EFB59B7D29452993998AF5B1A3E0C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tests/_1M pop</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tests/_1M pop]</local-name>
            <parent-name>[Covid Live.csv]</parent-name>
            <remote-alias>Tests/_1M pop</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid Live.csv_44EFB59B7D29452993998AF5B1A3E0C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Covid Live.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid Live.csv_44EFB59B7D29452993998AF5B1A3E0C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Active Cases' datatype='string' name='[Active_Cases]' role='dimension' type='nominal' />
      <column caption='Country, Other' datatype='string' name='[Country,_Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Deaths/ 1M pop' datatype='integer' name='[Deaths/_1M pop]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='integer' name='[New_Deaths]' role='measure' type='quantitative' />
      <column caption='Serious, Critical' datatype='integer' name='[Serious,_Critical]' role='measure' type='quantitative' />
      <column caption='Tests/ 1M pop' datatype='integer' name='[Tests/_1M pop]' role='measure' type='quantitative' />
      <column caption='Tot Cases/ 1M pop' datatype='integer' name='[Tot Cases/_1M pop]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[Total_Cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[Total_Deaths]' role='measure' type='quantitative' />
      <column caption='Total Recovered' datatype='string' name='[Total_Recovered]' role='dimension' type='nominal' />
      <column caption='Total Tests' datatype='integer' name='[Total_Tests]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Covid Live.csv' datatype='table' name='[__tableau_internal_object_id__].[Covid Live.csv_44EFB59B7D29452993998AF5B1A3E0C5]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Covid Live.csv' id='Covid Live.csv_44EFB59B7D29452993998AF5B1A3E0C5'>
            <properties context=''>
              <relation connection='textscan.0v1cf391a345ec15p3fc80xy6yn2' name='Covid Live.csv' table='[Covid Live#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='#' ordinal='0' />
                  <column datatype='string' name='Country,_Other' ordinal='1' />
                  <column datatype='integer' name='Total_Cases' ordinal='2' />
                  <column datatype='integer' name='Total_Deaths' ordinal='3' />
                  <column datatype='integer' name='New_Deaths' ordinal='4' />
                  <column datatype='string' name='Total_Recovered' ordinal='5' />
                  <column datatype='string' name='Active_Cases' ordinal='6' />
                  <column datatype='integer' name='Serious,_Critical' ordinal='7' />
                  <column datatype='integer' name='Tot Cases/_1M pop' ordinal='8' />
                  <column datatype='integer' name='Deaths/_1M pop' ordinal='9' />
                  <column datatype='integer' name='Total_Tests' ordinal='10' />
                  <column datatype='integer' name='Tests/_1M pop' ordinal='11' />
                  <column datatype='integer' name='Population' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_12FE353D8E484037B987A6E1D9F98FC1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Covid Analysis' type='sheet' worksheet='Con-TC vs TD' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Covid Analysis' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Con-Pop vs TC'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#59a14f' fontname='Showcard Gothic'>Population  Vs Total Cases Country Wise</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run bold='true' fontsize='15'>Analysis-</run>
            <run fontsize='15'> Here we can see that after the formation of good bond between India and US, China the over populated Country is having Less Cases than India &amp; US</run>
            <run>Æ </run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='zomato' name='federated.1bik5ws0ppg7vn1bzrv3a092i5mh' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1bik5ws0ppg7vn1bzrv3a092i5mh'>
            <column caption='Country, Other' datatype='string' name='[Country,_Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[Total_Cases]' role='measure' type='quantitative' />
            <column-instance column='[Country,_Other]' derivation='None' name='[none:Country,_Other:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total_Cases]' derivation='Sum' name='[sum:Total_Cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[Action (Country, Other)]'>
            <groupfilter function='level-members' level='[Country,_Other]' user:ui-action-filter='[Action1_12FE353D8E484037B987A6E1D9F98FC1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[Action (Country, Other)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[sum:Total_Cases:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#eed6d6</color>
                <color>#ecbdbd</color>
                <color>#eaa3a3</color>
                <color>#e78b8b</color>
                <color>#e57272</color>
                <color>#e35a5a</color>
                <color>#e04343</color>
                <color>#de2c2c</color>
                <color>#dc1616</color>
                <color>#da0000</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[none:Country,_Other:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[none:Country,_Other:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[none:Country,_Other:nk]' value='false' />
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[sum:Population:qk]' />
              <color column='[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[sum:Total_Cases:qk]' />
              <text column='[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[none:Country,_Other:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{9795455B-CCB3-4B7F-A1D8-B2F5C10DCFB7}' />
    </worksheet>
    <worksheet name='Con-S,C vs TC'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#59a14f' fontname='Showcard Gothic'>Serious/Critical Vs Total Cases Country Wise </run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run bold='true' fontsize='15'>ANALYSIS- </run>
            <run fontsize='15'>Here we can see that Brazil is having most no. Serious/Critical cases. </run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='zomato' name='federated.1bik5ws0ppg7vn1bzrv3a092i5mh' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1bik5ws0ppg7vn1bzrv3a092i5mh'>
            <column caption='Country, Other' datatype='string' name='[Country,_Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Serious, Critical' datatype='integer' name='[Serious,_Critical]' role='measure' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[Total_Cases]' role='measure' type='quantitative' />
            <column-instance column='[Country,_Other]' derivation='None' name='[none:Country,_Other:nk]' pivot='key' type='nominal' />
            <column-instance column='[Serious,_Critical]' derivation='Sum' name='[sum:Serious,_Critical:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total_Cases]' derivation='Sum' name='[sum:Total_Cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[Action (Country, Other)]'>
            <groupfilter function='level-members' level='[Country,_Other]' user:ui-action-filter='[Action1_12FE353D8E484037B987A6E1D9F98FC1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[Action (Country, Other)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[Longitude (generated)]' field-type='quantitative' max='29901250.173596717' min='-11779658.3661099' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[Latitude (generated)]' field-type='quantitative' max='13793494.867775161' min='-6488279.1949366368' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[sum:Serious,_Critical:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[sum:Serious,_Critical:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#eed6d6</color>
                <color>#ecbdbd</color>
                <color>#eaa3a3</color>
                <color>#e78b8b</color>
                <color>#e57272</color>
                <color>#e35a5a</color>
                <color>#e04343</color>
                <color>#de2c2c</color>
                <color>#dc1616</color>
                <color>#da0000</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[sum:Serious,_Critical:qk]' />
              <lod column='[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[none:Country,_Other:nk]' />
              <lod column='[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[sum:Total_Cases:qk]' />
              <geometry column='[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[Latitude (generated)]</rows>
        <cols>[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{A8084A1F-A315-4791-8FC7-8151C2BF31D0}' />
    </worksheet>
    <worksheet name='Con-TC vs TD'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#59a138' fontname='Showcard Gothic'>Total Cases Vs Total Death Country wise </run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run bold='true' fontsize='10'>ANALYSIS- </run>
            <run fontsize='10'>Here we can see by the tree maps that the most affected country is USA.</run>
            <run>Æ&#10;</run>
            <run fontsize='10'>Total Cases= 98,166,904</run>
            <run>Æ&#10;</run>
            <run fontsize='10'>Death=1,084,282</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='zomato' name='federated.1bik5ws0ppg7vn1bzrv3a092i5mh' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1bik5ws0ppg7vn1bzrv3a092i5mh'>
            <column caption='Country, Other' datatype='string' name='[Country,_Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Total Cases' datatype='integer' name='[Total_Cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[Total_Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Country,_Other]' derivation='None' name='[none:Country,_Other:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total_Cases]' derivation='Sum' name='[sum:Total_Cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total_Deaths]' derivation='Sum' name='[sum:Total_Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[sum:Total_Deaths:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#eed6d6</color>
                <color>#ecbdbd</color>
                <color>#eaa3a3</color>
                <color>#e78b8b</color>
                <color>#e57272</color>
                <color>#e35a5a</color>
                <color>#e04343</color>
                <color>#de2c2c</color>
                <color>#dc1616</color>
                <color>#da0000</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[sum:Total_Cases:qk]' />
              <color column='[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[sum:Total_Deaths:qk]' />
              <text column='[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[none:Country,_Other:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[none:Country,_Other:nk]</run>
                <run>&gt;&#10;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{D439223D-9AA0-411F-A60F-518BE841684F}' />
    </worksheet>
    <worksheet name='Con-TC vs TT'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#59a14f' fontname='Showcard Gothic'>Total Cases Vs Total Test Country Wise</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run bold='true' fontsize='15'>Analysis- </run>
            <run fontsize='15'>Here we can see that USA &amp; India both have highest no. in rise of Cases and highest no. of  Tests are done.</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='zomato' name='federated.1bik5ws0ppg7vn1bzrv3a092i5mh' />
          </datasources>
          <datasource-dependencies datasource='federated.1bik5ws0ppg7vn1bzrv3a092i5mh'>
            <column caption='Country, Other' datatype='string' name='[Country,_Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Total Cases' datatype='integer' name='[Total_Cases]' role='measure' type='quantitative' />
            <column caption='Total Tests' datatype='integer' name='[Total_Tests]' role='measure' type='quantitative' />
            <column-instance column='[Country,_Other]' derivation='None' name='[none:Country,_Other:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total_Tests]' derivation='Sum' name='[pcto:sum:Total_Tests:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Total_Cases]' derivation='Sum' name='[sum:Total_Cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[Action (Country, Other)]'>
            <groupfilter function='level-members' level='[Country,_Other]' user:ui-action-filter='[Action1_12FE353D8E484037B987A6E1D9F98FC1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[Action (Country, Other)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[pcto:sum:Total_Tests:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#eed6d6</color>
                <color>#ecbdbd</color>
                <color>#eaa3a3</color>
                <color>#e78b8b</color>
                <color>#e57272</color>
                <color>#e35a5a</color>
                <color>#e04343</color>
                <color>#de2c2c</color>
                <color>#dc1616</color>
                <color>#da0000</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[sum:Total_Cases:qk]' />
              <text column='[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[none:Country,_Other:nk]' />
              <color column='[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[pcto:sum:Total_Tests:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{2B046CEC-5A25-4364-9B9F-FE54E3A932A8}' />
    </worksheet>
    <worksheet name='New Deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#59a14f' fontname='Showcard Gothic'>New Death Country Wise</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run bold='true' fontsize='15'>ANALYSIS-</run>
            <run fontsize='15'> Here in the world map it is clear that after the succesful tests happend only 1 country (THAILAND)is having new death i.e 9</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='zomato' name='federated.1bik5ws0ppg7vn1bzrv3a092i5mh' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1bik5ws0ppg7vn1bzrv3a092i5mh'>
            <column caption='Country, Other' datatype='string' name='[Country,_Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='New Deaths' datatype='integer' name='[New_Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Country,_Other]' derivation='None' name='[none:Country,_Other:nk]' pivot='key' type='nominal' />
            <column-instance column='[New_Deaths]' derivation='Sum' name='[sum:New_Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[Action (Country, Other)]'>
            <groupfilter function='level-members' level='[Country,_Other]' user:ui-action-filter='[Action1_12FE353D8E484037B987A6E1D9F98FC1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[Action (Country, Other)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[Longitude (generated)]' field-type='quantitative' max='30468426.515821606' min='-23236826.721626718' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[Latitude (generated)]' field-type='quantitative' max='17088618.445367724' min='-13886791.215734854' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[sum:New_Deaths:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#eed6d6</color>
                <color>#ecbdbd</color>
                <color>#eaa3a3</color>
                <color>#e78b8b</color>
                <color>#e57272</color>
                <color>#e35a5a</color>
                <color>#e04343</color>
                <color>#de2c2c</color>
                <color>#dc1616</color>
                <color>#da0000</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[sum:New_Deaths:qk]' />
              <lod column='[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[none:Country,_Other:nk]' />
              <geometry column='[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[Latitude (generated)]</rows>
        <cols>[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{0AE412B4-5FAF-4127-8D6F-E129B18126C0}' />
    </worksheet>
    <worksheet name='TC card'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#59a138' fontname='Showcard Gothic'>Total Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='zomato' name='federated.1bik5ws0ppg7vn1bzrv3a092i5mh' />
          </datasources>
          <datasource-dependencies datasource='federated.1bik5ws0ppg7vn1bzrv3a092i5mh'>
            <column caption='Country, Other' datatype='string' name='[Country,_Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Total Cases' datatype='integer' name='[Total_Cases]' role='measure' type='quantitative' />
            <column-instance column='[Total_Cases]' derivation='Sum' name='[sum:Total_Cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[Action (Country, Other)]'>
            <groupfilter function='level-members' level='[Country,_Other]' user:ui-action-filter='[Action1_12FE353D8E484037B987A6E1D9F98FC1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[Action (Country, Other)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' value='#000000' />
            <format attr='color' data-class='subtotal' scope='cols' value='#f1ce63' />
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='center' />
            <format attr='vertical-align' data-class='subtotal' value='center' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' data-class='subtotal' scope='cols' value='#c0c0c0' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='subtotal' scope='cols' value='#faf4e7' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='0' />
            <format attr='background-color' value='#ff0000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[sum:Total_Cases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='4.5644211769104004' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{96A554F8-DEB5-4DE7-AA95-A2F6A2B06093}' />
    </worksheet>
    <worksheet name='TD card'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#59a138' fontname='Showcard Gothic'>Total Deaths</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='zomato' name='federated.1bik5ws0ppg7vn1bzrv3a092i5mh' />
          </datasources>
          <datasource-dependencies datasource='federated.1bik5ws0ppg7vn1bzrv3a092i5mh'>
            <column caption='Country, Other' datatype='string' name='[Country,_Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Total Deaths' datatype='integer' name='[Total_Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Total_Deaths]' derivation='Sum' name='[sum:Total_Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[Action (Country, Other)]'>
            <groupfilter function='level-members' level='[Country,_Other]' user:ui-action-filter='[Action1_12FE353D8E484037B987A6E1D9F98FC1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[Action (Country, Other)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' value='#000000' />
            <format attr='color' data-class='subtotal' scope='cols' value='#f1ce63' />
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='center' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' data-class='subtotal' scope='cols' value='#c0c0c0' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='subtotal' scope='cols' value='#faf4e7' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='0' />
            <format attr='background-color' value='#ff0000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[sum:Total_Deaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='4.5644211769104004' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{D5E4D8A7-847A-4F7D-B5D7-D393E6FA758A}' />
    </worksheet>
    <worksheet name='TT card'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#59a138' fontname='Showcard Gothic'>Total Tests</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='zomato' name='federated.1bik5ws0ppg7vn1bzrv3a092i5mh' />
          </datasources>
          <datasource-dependencies datasource='federated.1bik5ws0ppg7vn1bzrv3a092i5mh'>
            <column caption='Country, Other' datatype='string' name='[Country,_Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Total Tests' datatype='integer' name='[Total_Tests]' role='measure' type='quantitative' />
            <column-instance column='[Total_Tests]' derivation='Sum' name='[sum:Total_Tests:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[Action (Country, Other)]'>
            <groupfilter function='level-members' level='[Country,_Other]' user:ui-action-filter='[Action1_12FE353D8E484037B987A6E1D9F98FC1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[Action (Country, Other)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' value='#000000' />
            <format attr='color' data-class='subtotal' scope='cols' value='#f1ce63' />
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='center' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' data-class='subtotal' scope='cols' value='#c0c0c0' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='subtotal' scope='cols' value='#faf4e7' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='0' />
            <format attr='background-color' value='#ff0000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[sum:Total_Tests:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='4.5644211769104004' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{FDBEDE3B-F5B0-4C12-899A-6B2288D6C270}' />
    </worksheet>
    <worksheet name='Zones'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#59a14f' fontname='Showcard Gothic'>Country Wise Zones</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run bold='true' fontsize='15'>Analysis</run>
            <run fontsize='15'>- Those Countries which are having Total Cases &gt;= 70 Lakh are Red Zoned</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='zomato' name='federated.1bik5ws0ppg7vn1bzrv3a092i5mh' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='categories' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='70800001'>
              <calculation class='tableau' formula='70800001' />
              <range granularity='100000' max='98166904' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1bik5ws0ppg7vn1bzrv3a092i5mh'>
            <column caption='total cases' datatype='string' name='[Calculation_522699045401501696]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Parameters].[Parameter 1]&gt;70000000 THEN &quot;RED ZONE&quot;&#13;&#10;ELSE &quot;YELLOW ZONE&quot;&#13;&#10;END' />
            </column>
            <column caption='Country, Other' datatype='string' name='[Country,_Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Calculation_522699045401501696]' derivation='None' name='[none:Calculation_522699045401501696:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country,_Other]' derivation='None' name='[none:Country,_Other:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[Action (Country, Other)]'>
            <groupfilter function='level-members' level='[Country,_Other]' user:ui-action-filter='[Action1_12FE353D8E484037B987A6E1D9F98FC1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[Action (Country, Other)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[none:Calculation_522699045401501696:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[none:Country,_Other:nk] / [federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[none:Calculation_522699045401501696:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{3D1DBA41-32E5-48D8-896F-362E00A46647}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Covid Analysis'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ff0000' fontname='Showcard Gothic' fontsize='22'>Covid Analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
      </style>
      <size maxheight='951' maxwidth='1757' minheight='851' minwidth='1657' sizing-mode='range' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='51' param='horz' type-v2='layout-flow' w='99034' x='483' y='940'>
            <zone h='98120' id='37' param='vert' type-v2='layout-flow' w='99034' x='483' y='940'>
              <zone h='6345' id='38' type-v2='title' w='99034' x='483' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='91775' id='31' param='horz' type-v2='layout-flow' w='99034' x='483' y='7285'>
                <zone h='91775' id='29' type-v2='layout-basic' w='99034' x='483' y='7285'>
                  <zone h='91775' id='27' param='horz' type-v2='layout-flow' w='99034' x='483' y='7285'>
                    <zone h='91775' id='5' type-v2='layout-basic' w='99034' x='483' y='7285'>
                      <zone h='46166' id='3' name='Con-TC vs TD' w='33421' x='483' y='7285'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='45609' id='12' name='Con-S,C vs TC' w='40817' x='483' y='53451'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='46166' id='24' name='Con-Pop vs TC' w='22932' x='59194' y='7285'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='46166' id='25' name='Con-TC vs TT' w='25290' x='33904' y='7285'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='15858' id='46' name='TD card' w='17391' x='82126' y='7285'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='16570' id='47' name='TC card' w='17391' x='82126' y='23143'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='17034' id='48' name='TT card' w='17391' x='82126' y='39713'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='45609' id='49' name='New Deaths' w='40826' x='41300' y='53451'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='42313' id='53' name='Zones' w='17391' x='82126' y='56747'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#ff0000' fontname='Showcard Gothic' fontsize='22'>Covid Analysis</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='2300' minheight='2300' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='57' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='56' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone h='6345' id='38' type-v2='title' w='99034' x='483' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46166' id='3' is-fixed='true' name='Con-TC vs TD' w='33421' x='483' y='7285'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46166' id='25' is-fixed='true' name='Con-TC vs TT' w='25290' x='33904' y='7285'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46166' id='24' is-fixed='true' name='Con-Pop vs TC' w='22932' x='59194' y='7285'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='143' h='15858' id='46' is-fixed='true' name='TD card' w='17391' x='82126' y='7285'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='150' h='16570' id='47' is-fixed='true' name='TC card' w='17391' x='82126' y='23143'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='154' h='17034' id='48' is-fixed='true' name='TT card' w='17391' x='82126' y='39713'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45609' id='12' is-fixed='true' name='Con-S,C vs TC' w='40817' x='483' y='53451'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45609' id='49' is-fixed='true' name='New Deaths' w='40826' x='41300' y='53451'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42313' id='53' is-fixed='true' name='Zones' w='17391' x='82126' y='56747'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{8971EFAA-3479-4068-862C-5F80002D0DB5}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' maximized='true' name='Con-TC vs TD'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[sum:Total_Deaths:qk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[none:Country,_Other:nk]</field>
            <field>[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[none:dish_liked:nk]</field>
            <field>[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[none:location:nk]</field>
            <field>[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[none:menu_item:nk]</field>
            <field>[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[none:name:nk]</field>
            <field>[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[sum:Total_Deaths:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C8919D77-1B3F-485D-BFA3-232B79D02350}' />
    </window>
    <window class='worksheet' name='Con-TC vs TT'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[pcto:sum:Total_Tests:qk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[pcto:sum:Total_Tests:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FFE783CE-57F4-44B3-9F19-4CF3C1D9237B}' />
    </window>
    <window class='worksheet' name='Con-S,C vs TC'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[sum:Serious,_Critical:qk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[none:Country,_Other:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2AEFE38B-BCF7-448B-B296-7FCE7B2E4CD5}' />
    </window>
    <window class='worksheet' name='New Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[sum:New_Deaths:qk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[none:Country,_Other:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D766D628-004C-480F-85EB-9CF195952982}' />
    </window>
    <window class='worksheet' name='Con-Pop vs TC'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[sum:Total_Cases:qk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[none:Country,_Other:nk]</field>
            <field>[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[none:Total_Recovered:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{90E71C3F-87D7-455D-9CFC-1E9CE9F1D125}' />
    </window>
    <window class='worksheet' name='Zones'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[none:Calculation_522699045401501696:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[none:Calculation_522699045401501696:nk]</field>
            <field>[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[none:Country,_Other:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8E832E11-B5F7-4EDE-B125-FDD767596FAC}' />
    </window>
    <window class='worksheet' name='TD card'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[none:Calculation_522699045401501696:nk]</field>
            <field>[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[none:Country,_Other:nk]</field>
            <field>[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[none:Total_Recovered:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3301D2FC-0432-407F-AF26-E565D3A9DB66}' />
    </window>
    <window class='worksheet' name='TC card'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[none:Calculation_522699045401501696:nk]</field>
            <field>[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[none:Country,_Other:nk]</field>
            <field>[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[none:Total_Recovered:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5DB9BCF6-3AA7-4F06-B613-B8EFF83BFBC7}' />
    </window>
    <window class='worksheet' name='TT card'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[none:Calculation_522699045401501696:nk]</field>
            <field>[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[none:Country,_Other:nk]</field>
            <field>[federated.1bik5ws0ppg7vn1bzrv3a092i5mh].[none:Total_Recovered:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1B2DA41B-E518-4039-A24B-F518401F2AEE}' />
    </window>
    <window class='dashboard' name='Covid Analysis'>
      <viewpoints>
        <viewpoint name='Con-Pop vs TC' />
        <viewpoint name='Con-S,C vs TC'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Con-TC vs TD' />
        <viewpoint name='Con-TC vs TT' />
        <viewpoint name='New Deaths'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='TC card'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='TD card'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='TT card'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Zones' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{63B00738-4391-422C-B440-7655AEFD2FB7}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Con-Pop vs TC' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Con-S,C vs TC' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Con-TC vs TD' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Con-TC vs TT' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29eYxk13Xf/73L2+pVdfUyvczSs3M2zkZSXEXSkmhrjSzJshHZgRMhtmHk
      DztIYEVIbAdRfgEC2LHlCJEdQ7YkBLCsRIZNW7IoyQtlkiIlkaK4DmfI2deenp7uru3t997f
      H+9Vsbq6qmvpWmapDyCI01313q3qe94999xzvocopRSGDLlNoYMewJAhg4QPegC3I0opKN8H
      whBKCAAA4RzEMEA4BwgZ8AhvH4YG0GOUUpCFAsITJ+A+8wyCV15BcOoUxLVrUMUiVBAAAIhp
      go6Ogm/eDH3fPhj33APrwQfBt2wB0fUBf4pbFzLcA/QGmc/DefJJFL7yFXjPPovo0iWgza+a
      GAa0PXtgf+hDyHziE9DvvDNeIYZ0jaEBdJnoyhXk/viPkf/SlxCdP9+9C+s6zPvuw9i/+3ew
      P/QhEMPo3rVvY4YG0CXE8jKWf//3sfxHfwS5sNC7G1EK4+hRjH/mM7A/8AEQxnp3r9uAoQGs
      EyUlSl//Ohb+w39A+Oab/bsx50h/7GPY8Du/A2379v7d9xZjaADrQDoOFj79aeT+9/8Gomgg
      Y2DT05j6whdg/7N/BjKMHrXN0AA6QCkFcekSLn/84/B/+MNBDwegFOP/6T9h/DOfAaHDo512
      GBpAmyilEB4/jssf/jDCU6cGPZwVjPzyL2Pq858fhk3bYGgAbRKcOIGL7343xJUrgx5KXTL/
      4l9g+otfHBpBiwzXyzYIL1zA5Q9/+Iad/ABQ+LM/w8KnPgU1oD3JzcbQAFpElkqY+8QnEL71
      1qCH0pTl//W/sPz5z2O4uDdnaAAtoKTE9d/8TXjPPjvoobSGlLj+279984x3gAz3AC1Q/PrX
      ceXjHwfCcNBDaQv9zjux5ZlnwEZHBz2UG5bhCtAEkcvh+qc/fdNNfgAIXn8dy5/97NAVWoOh
      ATRh+XOfQ/DGG4MeRscs/8EfIDxxYtDDuGEZGsAaRFevIvf5zw96GOtC5vNY+r3fG64CDRga
      QAOUUsj/yZ9AXL066KGsm8Kf/znC06cHPYwbkqEBNECVSsh98YuDHkZXUKUS8n/6p8NVoA5D
      A2iA+8wziG6hp2bxa1+D8rxBD+OGY2gAdVBKofCVrwx6GF0lPHkS3o2QuHeDMTSAOijHgfv0
      04MeRtdxvv3tQQ/hhmNoAHUIT59GdO7coIfRddzvfhdKykEP44ZiaAB1cL/3vbYL2G8G/Bdf
      hHKcQQ/jhmJoAHUIXnll0EPoCcr3EQwPxVYwNIAalFIIT54c9DB6xq382TphaAC1RBGi+fn+
      3Y+QvirBRZcv9+1eNwNDA6hBCQGZz/fs+uZPfxxsRIPxgZ+DtukAsr/+y0j/84+DWBZG/7/f
      h74127N7A4BcXOzp9W82hgZQi5SxbmcfUH4BoBais2+CTO+F/+RfgR841NN7yuFh2AqGBlCH
      XjokKpQglgliaVDBEvJ/+EfA9geReWwT+NQ09INHezqAoXTKSoZCk7VQCmKaPbu8/8wzsN/3
      fqjlcxDEgv3THwQKp1D65nOI8iXwvQdBTQbpip7cn1hWT657szI0gBoI56DZHvrhhWso/cXX
      Kv8sfe3/rfh1dOK13t0bAJuY6On1bzaGLlAtjIFt3DjoUfQMvmXLoIdwQzE0gBoIIdDvuGPQ
      w+gZ2i382TphaAB10I8cGfQQegKxbWi7dw96GDcUQwOog/Xww8AtqLFp3n//sK9ADbfeX7kL
      8NnZW9JVSL373UPx3BqG30YdqGki9dhjgx5GdyEEqQ98YNCjuOEYGkADMr/wC7eUG6QfOQLj
      UG9PmW9Gbp2/cJcx7rkH+p13DnoYXSPziU8MFaPrMDSABlDTRPbf/JtBD6Mr0A0bMPIv/+Wg
      h3FDMjSANcj8/M+D79w56GGsm+y//tdgMzODHsYNydAA1oCNjmLsN37jpu7czqankf21Xxsm
      wTVgaABNGPnkJ2E+8MCgh9Ex47/92+CbNw96GDcsQ3n0FnCfew6XHnsMynUHPZS2MB95BJu/
      /W3QYQZoQ4YrQAuYDzyA8f/yX24qV4hu2IDpL3wB1LKghIAIAgjfhxS9SbO+WRmuAC2ihMCV
      n/1ZlB5/fNBDaY6mYfr//B9o73sfwmIRsqa3AeUcmm1DHxkB5fy23h8MDaANZD6PS+9/P7zn
      nhv0UBrDGEZ+67dgfvKTzUWwCIE5OgpjdPS2NYKhC9QGdGQEG//qr6AfPjzoodSHUqR+9Vdh
      /OIvtqYApxS8pSU48/O3rWLccAVoglIqLpQXIlaLIwRyYQFXPvEJeDeSfijnSP/Gb8D8pV/q
      KOFNHxmBNTFx260EQwOoh1KQYYhgaQlhLgfhuisMgGoaSBAg/7u/C+/rXx+43CAdGcHY7/wO
      6E/91LquY8/MQEulujSqm4OhAdSghIB39Sr8+fmmzaaVUpDnz8P5kz+B/53vAANwI/TDhzH9
      xS9CbNmCsFRa17WYaSK9ceNttQoMDaAK4fsonT4N0eZEUkLAf+IJlH73d/u2GhDbxuiv/zrG
      PvUpkJER5M+f74qgb2bLFrDbKGluaAAJwvdRPHECMgg6er9SCtGPfwzns59FePx4l0dXBedI
      f+QjGP/P/xn6oUMghCB0HJTm5rpyeWvDBhgjI1251s3A0AAQP8ELJ05AdOHprWUykD/6EXKf
      +xy8H/ygC6OLIek0jA9/GOlf+zVk7rkHfhhCSgld16E8D9716125j5HNwrqNpFOGBqAU3MuX
      4V250rVLpu+4AzyTQXjiBPJf+Qqcb30L/ssvt91sm2azMB95BJmf+RkYH/4wPE2r65/TIEDU
      JT1TPZNBanKyK9e6GbjtDUD6PnKvv97VDSyzLGQOHFgxWcX16/C+/334r7yC8ORJRJcuQSwu
      Qi4vQ+RysSKdZcVFK5SC6DpoNgs2Pg5t2zZo+/cDhw6B7d0LousrOj6yMESYy3Vl7MboKKzx
      8a5c62bgtjcA98oVeJcudf266b17oWUydX+npER07hzyX/0qnO98B6IN94Vt3Ajzve8F//CH
      waanwTiHTilKXVrBUlNT0NPprlzrZuC2NgClFApvvNEV378WY3oaqdnZ2hsiunoVy3/0Ryh9
      85vrUqEmqRRSP/MzGP+VXwHNZpG/cCE+q1gPhGBkdhaU3z6Kmbe1AcgwRP611yoTJ/RLOHc1
      fhpPT84gY60MB4rAh+A6dNo8Ts5sGyP791f+rYRA6dvfxtL/+B8QCwtd+wx882ZM/NZvAfv2
      wV+nG6Sl00hNTt5W5wC3dS6QiqKVOTBKIjd/Gj84Pgff9+AGEUrFEhzfw9LSAi6ePIbzpQj5
      YhGBV8Rb5y/CS17nei5C8fa1qsOpKgiw9D//JxZ+8ze7OvkBILp0CVf/7b+F//jj69L8IZTC
      HBu7rSY/cJurQyulVhweaWYGe3fMwk3ZiPKXcSI3heKp47CmdVzNERwcU3j++edwePdenH39
      +1hyfZzatAOpVBZGsISDR++FVr5YsqqoIMD1//bfUPzrv+5d58kgwPLnPgd7YQHaz/1cR5ew
      JiZuK9enzG29ApA1+nMRErtIy8UioFl44PAhWBqDZWiIIOGEFI888BCO7t0HzbmCEsvA5lVf
      J2NQQmDx938fxccf733bVaVQ+spXEP3t37a3EhACa8MGaOn0bff0B253A9C0VZPFsCexe+MI
      NkxvQ2H+JDbt2oWt05tgGwyZya149733IUsFfvLBu/HG6fPQdB3jtoVNG1dueJlhoPj44yj8
      +Z/37wMpheKXvwz61lvgLZRBlnN/9Ezmtpz8wG2+CVZKoXD8eNu5P9XI0MPLpy/gyJ7doFWT
      iPk+lv79vx9IHTGdnMSmr34VGBlBUCxCeF5lo084BzcMaLYNZhi37cQvc1sbAAB4c3NwL17s
      6jWVUvA+/3kEL77Y1eu2Q/pnfxbZ//gf4SYGmEqlwBgDMOwTVs1t7QIBgD4xAZJMjG4hTp4c
      6OQHgNI3vgG3qit8FEUghAwnfw23vQFQTYPRZdW04Nvf7ur1OkF5Htyvfa0y4fltGOFphdve
      AADAnJ4G79LxPxMC4Wu9bXTXKsHTT0P3fRBC4Hke5G1a97sWQwNAfAhk79q1bgEpfXwc6uRJ
      oMOagm4jFhbgvPBCXLkmJcRQE2gVQwNIoJqGzJ494J0UgxACY2oKqe3b4T//fPcHtw7Eiy+C
      cw5N04ZuUB2G30gVVNOQ3r0b/sIC/Lm5lqrDWCoFa/Pm2HCUgv/6630YaeuEb7wBy7LWvflV
      SkEpBQLcUm2WhgZQA6EU5uQk9PFxhLkcwuVlCNeN1dWkBKEUVNfB0mnoY2Pg6XRlQkQLC5CF
      woA/wUqiq1ehHAfEtjt6v1IKvusiDAIoKUEIAeMcRlVY9WZmaAD1IASUcxgTE9DHxwGloKSE
      73lxOJExaIYBraZ4XObzUG1WfQEAzEloGynCM1dX/Jjv2gWxkAMROchiB9cFIItFKM8DOjAA
      pRScQgGiSh1DKYUoDCHyeaRGRm56IxgaQBMIIVAAPN9HJARACJSU8FwXBFhhBMrzKklwbd1D
      y4BvzUI/9BDg5+E8+wKsdz4EviGN0lOvgRSXoD/6U6BmBOfvngTaOboMgjjrNXFhpBAghIAy
      1tQtCn1/xeSvRikFz3GQuslziIYG0AJKKUR1JkIQBCtXAUo7VpAmmo7ozDFIPg7j8H74338S
      4sBdIKNTYPIsSEoH27wbPPskouU2LpyMyXccBFUFOIwxmOk0KKUQQiAKQ1DGoCV1x0ophE32
      QCIM49Ux+bcUAkqpinHdDIYxNIAWaJQtUvtTalkAY+2vAkpChREgBBQiiIUcrHf9JIjO4bw2
      D6VSYBM2VCSANucUMQz4YQhRU30mhIBbLMKwrEq6BBBPYsM0k2E1PzcQUiLy/di4quuUNQ1m
      KtXSSjNIbvtcoFZQSqFUKq3S1tcNA4auA8nTThYKuPj+999QG2G2dSuyf/qngKbV/T1hbIUh
      E0KQTmqZa/3/elBC1jxgszIZ8AZqFjcCt048q4cQQmBZFmh1+E8phJ6HYi6HUi4HL4m0sBtM
      UoRt3Nhw8gNYVadQPjUOgqB5gUxywLYWbrHYcAW9ERgaQIuoxNflnMdfmpRQUlZOWQPPg1Ms
      wjh6dMAjXYl1zz1rPn0N04wPyKSMN8thiNBxELouKCHgaxlPKyiFwPPWd40eMtwDNEBKicD3
      4/QBQkCQyJkI0VBDSEQR6N13A3/5l/0dbCMohfXgg1C6jrCOAgUBID0PwnHicw6lUHbyJIAI
      sYsExuLioaSbDNd1EAB+i7UOoiY0XI5IQalKVd6gXKShAdRBCAGnVFq1dBNCVkQ96qHdey/o
      6Cjkcjuhmt6g7dwJY98+QNdjly2J6iilgCCADAKIJu6JEiLenAcBuGXBGhsD03X4bUjJlDfT
      5ZUy8v3YdUoMgHIO3TRjw+qzIdx2LlA5Fh6FIaIwrITuqn/ve15dv1UlB2JrYpqwP/Shbg+7
      I9If+QhIUvVl2jbsbBaGZQGeF2sStembR66L4twcglKprXQIQimiMERpeRmB48TBhOTeSimI
      MIRbKMAtFPreqea2iQKpZNMa1OmUSBmDbprQDAMAUCwUGm/cmoQ4GWMwHAeXfvqn1yV8tV7Y
      1BQ2/cVfgI2OVn4mowjFq1dXNc3rBHNsDEGTCFEZrmmIWsyQZZqG1MhI31aC22IFEFFUidTU
      axMqhYBXKqGUyzVtI9osMqIZBvjMDEb+1b9a15jXBSEY/dVfXTH5lZQozc93ZfIDgLe0BNLC
      s5MQ0jSUWo0IQwR9rKO+5Q1ARBGcfL6l/rhSCDj5/NpRE8uqrBS1aLoe/44QZH/pl6Dt2tXx
      uNeDed99SH/0o5V/K6XgLi1BdLlOQTjOytBwDYQQaIbRtlsTNHBBe8EtbQBKqbbj0EopqKR+
      thauaeCMQdc06JoGSggopeCaBsu2Ydp25X3UsjD53/87SJ+FZtnUFDZ85jMgVeFLEQQIisXu
      30xKUCGgW9aKFJDyxLez2Y6q0JSUqyJHveKW3gMEngevQ8kT3bKgCIEQAgTxk0Im3darn2iE
      UmimCT2TWXXsr5SC+93v4tqnPx0nyvUYmslg6g//EOaRI2//UCmUFhbW3T+sIYTAmJyEAmAm
      KyOhtPI9FJeWOupOb9p2bFg95pZdAdQ6D2BEGELTNNipFDiAIJ9H5LqrlnMlJQLHQWl+HqHr
      rlhtCCGw3vUubPiv/7XjfPxWoaOjmPyDP1g5+RGHHqNe+tRKgYRhfFLO2A2f+1PLLW0AnTx5
      yggh4Lku3HweXi7XNGRY9rPrGUHqfe/D1Gc/G6cl9ABt505M//Efw3zHO1b9rnbF6gWR6zac
      9LTDeoFO39f2ffpylwGw7j+6UtA5R9hm7wBveXmVTj8hBNYDD2Djl7+M1HvfG6codwNNg/2x
      j2HyC18A37277l4n6kMoVgRBw30W76DjZLnqrB/csnuAcuhzPRApO+oaqds2zGx29VNRKcgo
      QumZZ1D40pcQvPRSZwOjFPpDD8H6hV8A27OnasBJuaJtgyUZmKVr19b0/7/5d3+Pn/ypn8S6
      GqMSgpEtW+o+tZVSKC4ttfVA0i0LZo9dxjK3bCoEKRendGrfSbf4MqXFJdCREVi8+dIceh7M
      bHbFz6SU8BwnPhA6cgTp3/s9yDffRPSd78B95hmIa9eaXpdv2gTrXe+C9p73AFu3rl5JklNV
      Z3kZmmXBTKebfn7P81G4fgnPPv8q7PEZaPkryAmJsek7sIHlcezsJRw4cAQvvPQCKKF4/wc/
      gjGzznfQ4D6EEFjpNJwWm/jRpN64X9wyBlDOyoRSoEkUgjHW1iFMNQQrC2EuHTsO4/BRpP1F
      XFkKkJI5XChyPHRoF86ceQuLvoH7j+yN3ydEXECePBGVUvBKJUTVoT3GQPfvh330KNKf+hT8
      06dBjh1DdOlSXMcbhqCWBZo0yTMOHADfvBlBEMBvIaITlv3yJhtSqnNcv3wZEYBT587i6Owm
      PPjAvfju00/hgltA5BVw8cI17DlwF8ZpDm4g6xqAAuD7PpRS0DRtRa0w0zRYmQzcYnFNg2Sc
      w+rjKTBwCxiAUgq+4yCsOTzhug7GeccGwHV9RQlhmW9+8wl87BOfxFuvXMJbP34RtmXies7D
      FL+OnLcXo2YyLinj6jCgkntUj9D340zL7duRPnhw1R9/RafJKGpp8pcJHKfhJk+JEM8884+Y
      mt6BtB1CY3ls3TSOwtJlfOOb38TRex/F5eM/QKA2YGpqAqkRG2nCoGurr0gIgR8ElbLRIAiQ
      Tsoty3Bdh53NInCcOClPqYpxlpPhtAGoVd/UBqCkhJPP153kldyTDr5QpmnQDANBncqu3fsO
      IEUFLl4v4ODe7XACgZmpSehOtLKyquqP30yRTdd1yMR1kWEIhTgKohkG9FSqcq1OUgQaHUQR
      puGRn3hf5d+bdt4JADhz6gy27doBCmD75E+2dA+qaatqpqMogkYpwsVFBNeuIcrnIV03DhBQ
      CsI5aCoFfWICxswM6ICk2m/aTbBSCm6h0FKSFWGs5U0Y1/X4RBdA4erVyvuc5RxoOg3fKSKb
      GcGZk8cQ8jSmNkyCMwIiA+ipLDQaP9HSU1OVP2gUhnAalUkqBc4YwgZnFoRSmJkMNNNE8fr1
      jqJb0nV72qHGGh+H4BxRWX2iVAIrFBDNzUG2chZDCPSpKeiTk9BnZrqu1r3mrW9WA4jCEE6L
      UR7NMEA5R1ATo6+GUFrJ8ylPXC+fh99Bfa81OgpumvFxvpQgnCPw/bpukIqilpp0p0ZH4XbY
      DZ5RirAXqRCIv7eRLVsAQhAGAdwzZxBduNBx43E+Oor0oUNgfdoI37QG4Ltuy/4wZQzpsbH4
      VDQIEIUhlJSxe5CU/RlVNb/liiUlJZzr1yHb2EdQxsA0DWHNU5dwHufnMBZLDFIKzhiCVj8D
      53ExTrt/LkKQymZRmpvryYGYOTYGM5uNs02PH4d/4cK6r0ktC5m77gJv0Gi8m9y8B2Ed2C2l
      FLppIpXJQE+loBiDohShEPCSTXQUhigVCijm83BKJVDTbLn4gxACJUR8eFYzPhVFkK4LjVKk
      s1mks9kVLZWaIaOoI01OlhikWZUa3S2YrsMYGYnd0ZMnuzL5gdhlK7z0EkQf0qJv2E2w9H1E
      165B5HJQURTrcY6NgW/YEG+g2vATa1+rlIJfE+GJogi+76/IH1JJjSxPp+Pa2TX2GzxJ+63V
      36nFz+fBLQucsbZTNZimtf0ebpoghEDPZBD5fteS4gilSG3YAEIIgvl5uGfPduW6ZaTjoHTs
      GDJ33dVTMd4bzgDCq1fhPP88vJMn4wzK6icppaDpNKz9+ytqB624BLwqf7+s8lYvOlIv7AnE
      4k/piQlEQYDQdStH/wrxptmwbRBKUbx6te77V92nUAAbH287QqWZJqQQLacKl8OLQJKTNDGB
      klKI2kzvqIVQCntqClTToKIIpePHe7LJDhcWEMzNwdi0qevXLnPDGICKIhSffhql559vXHYo
      JWQ+j9IPfgDn5ZdhvvOdIDt2rDmRmKZB03WIpPaXJEJOlNJVRkAJgWxQCwzEE5AbBkQUwU0m
      kQAQCgEWRS1PgvJKwtqRHEnSHKyRkThc2mQlIJTGh0pVT0+pFKzxcQScw+90Q63rSG3YAJqk
      WniXL8dRph7hnjkDfXq6Z5GhG8IAZBAg9/jj8E+davk9yvPg/sM/QL/vPvCaFOAylLH4yby8
      vCpDs7a0Udd1MEorE7saxvkKI3Ndd0XMPwzDtrqvlCVBNNOE12IhuG5ZcZ49gNTYGPxisWHo
      lBsGoGkIwhAqCGBZFsIwhJe83rBtpFOpuEqsxWQ5QimMbBZGJlMxKqUUvC532KxFFIsIl5ag
      b9jQk+sP3ACUEMg/8URbk7+a4Ic/jPveHj0KmcShKWMAIbHqQ73QY5IzA0Li0Keug1IKpVRc
      wF1+TxKtMRIXSilVWUlqqbdyNIJQCpFEoZhpNnVJKGMwqirLaPJ0N2wbUVm7SMrKuKMgiNs0
      UQrKOZwaBbcgCGDpetxMm5B4gw2sUGsAIXGkyjCgWRa0xM1b8ZldF6IPMpDh/PytawDu66/D
      O3ZsXddwnnsOE7t2QUvy7cMgiPNOmpGkUTDGKvlDViqFKAzhFwoQjgMlBEqLi6Ccx5vXBqE5
      ZhhxQ+oWnuZE0xAEAaSUkACMdDoO6dYxIsY5UqOjdWtvKWPQU6lYViSfX31vISCFABUCzDBi
      Ua+k5LNU7QIRAnAOe3ISrCpMWzaOcipHOcO0csC3tNT0s3aDcHk5zq3qwWZ4oGFQ6fsofe97
      679Qsn8oJ8S1WwbpVYtgKYVwaQnR0hKU78dygUJA+D785WU4ly7VbYJnmCaMFvqLEcZAdR2R
      58WnpL4fJ64lE44kT21GKVQ+D1r+XQOkEHCaqFnIKIL0fRiGAY2xut3rVRQhdJx4fIwhcF0U
      FxZQWlqCm8/DWV5GYWEBXqFQWU1EC5vpC5evQokQbrTSOK8vLSDnt3a+In1/VY1FtxjoChCc
      OQPRJQU1/9w5iMVFRJbV9mGRlBJhovXvLizUzQEqo6SEyuehjY8DyRNRN4x4FbFtyChqXIBO
      CIimrSpRVJVfJz19dR0oFhEWCvALBWijo9AarDyB47S06sgoApESZI2JFCUrmJPL1Y80KYXA
      dRGFIezR0ZZqJd48fR6l+dfw/05L/Mpj9+P4iWMYn9kG7l+DMgL44+MQTg7jE5MwWH1DV20E
      GNploCuAf/Jk9y4WRfDPnm2YddmM0PfhF4sIWomOKAVZLCJl20jZNjjnCIIApVIJzLahj46C
      GUYcuUie6DyVAjWMlowz9DyEAMB5fP7RQIZFSVlX83Ot6651f6UUvEKhaZhVRhHcNnz/XbNb
      ce+Rd2CMC7hBhCdfehkAYFkGXj91FicvXwang6kjHpgBKCkRrigCUThx6SyeOHYMV936fwDX
      LWHJa/zHCefmOm4GLaWEaMN1Er4PkTSfLrtelX68hEDLZmFNToKk02AjI3FrpXaeYpxD27wZ
      mf37QRuUFcpEobpVZBSBrVGiSCht2aAi34ds8RyD6Bbmzp/EuYtnoVKj0PU4pEk0GxlxDdLY
      ALbGtUhNFK6bDM4FEqJGKkTg9bllfODwQVBK8cyJV1EQOn5izy68dPothFoGh8fTCDjFsydO
      YTFUePf+vbCrlk1ZKoGuowKs1ZBgGa9UggxDGIYBnmRDCiHAOYfv+3G7IUrjutwO6hLKrpmR
      RLWAOLW6HMFaS5SqHgrxWUag66tPtQkBN822VhTVwjnGO+89AqZr+MhdNlJ2GuPFIh7dfwdM
      jYIoibdcinsPrC0WQMuraQ8YnAGsqlbiePcdW/H3x17Bjs17QDULD01beGU+DycUOH3lHKa0
      bSAWgaIW7psA5gKJXVbVJEgiOZ3k9xFK2wplAqhszMIwfHtjKASEEGCMIQxDsKQHV6cEjhOf
      ASDJgK2KFlUqvlocdzk8nBofh5vLxeHSJGys2XZ8nTYMgKXTaGbWphGvOOOjY/G/x8be/qWS
      eOc974BtrD0NeTbbs3SIwe0BKI17alUQOHb5KjijcIMI565ewj+emccGU2DeFbA0CpH8nTlj
      oEn3xmp4JtOxmgDnvHlHlBqMVAqmadZ9EpdPm1V1bL0Dyipp5X691ddSVVVVrcA0DZ7noVgq
      QXAOYlkgqRRI0tus3YIUZttg61G+IxRp02j6EfTp6c7v0YSBrQCEUmgzMwgvX05+QvHQ3n1Q
      SOpxg1m8Y9sOEAA779mwsjfceBxunKi5prZpE7hhdLQR1gwDsG2IVsW0KAXR9YrvX0t5MnUj
      BTkKQxDG6u5vmKbF7kwzIyMEoVJA9XeTjFEqFXe8bNPNYJoGY8sWOMePt/W+tu5h29CqV40u
      M9AokFEt6YH4gIUmBy33bd9Z+e/y/9f7X+Xdug5927ZYv7PNtj6aYcSnrSMj8UhXqlYAACAA
      SURBVIarBUgqBdfz4NeRWwfi1ArOeVspz40IfB+lUqluBqxmmrCa5c0TsnafsIQwKVdsBUIp
      NMOAuXkzaJJw1wvMHTt6WiE2UAPQZ2fBZ2a6ci1z716wRFHASNpztkK5nSchBIQx2NPTTf1N
      XnYbEpRSMJONMKUUGueV0+VuwJODsVoXhVKKMAjgJYX1tX2Ky7qlPJVqeWI3ijjVYiU5QYRz
      pPbta/3DtIE2MQGjR2p6ZQZqAIRzZB59dN1KacSykHrwQQTFIpzFRbiLiyBR1FS/XjdNGJb1
      di2rUmCmCXNmppIns+I+jMEYG4M9M7NicpOkqkzjPC6ICQKUCoVK8+n1IoSAiKK48JwQ6KYJ
      3TTjkGsUxYdzAMAYtFQK9vg47PFxpMfHYWYyEG24YYoQWGtsOstZptUp5vrUFMzt29f3IWug
      lgX7wIGe1gIAN0BJpFIKxX/6J5See66zC1CK1GOPARs31vW3CefQ0mmo5F6EkDhFWtMAQlBM
      Tm0ppZWEOCUEdMYgPC8+HVUKTNehp9Ngul7xx71yvULipkXJZrUarQN5xVWfQddXbPgpY7H2
      UIM/nT0yUtHlkVJWPmOrpFKpeHXxPERBACUECKXxd2Ca9RXgpETp2DH4ly61da96UNOMSyJb
      SC1ZLwNPhiOEIP3II1BRBOeFF9qLmDAG6+GHoaanGxZhqyhCWCggPTW1IsojkkSx+EUqThxz
      3ViWRAjUZstEvh/H88sGZFmwUikoQuJ9QIPNsERcmNJOXfGKj5h0Z1whO9KkNlhE0Qphqk6g
      lMJIpWBYFmQYIlpeRnT1KkrFIqTnxekJlIJqGlg6DZbNwty6FdQw4uqwDjf/bGQEmUOH1hdd
      aoOBrwBllJTwXn8dhe9+F7KFJxafnET6Pe+Bn3RAbPp606yU8AFxTn8URaBSIiqVmvb+qgsh
      YKYJpetgjNWNPnFNg855ywoWtRiZTNyyNGljyjiHpmlw1zi1NlMp6FUp3MU2m4Sk02kQQhAt
      L8M/exbB/DxUKxqplIKPjIBmMhClEkQbKw/hHOb27bC2bWs5ENENBmoAKjnpDBOVBgAgQYDo
      xAlEJ08inJ9fMTGJrkPbtAnWwYMw9u5F4LptVTZZk5OIytVgQkA6TuthzzUoF4uEdSTZU+k0
      GGMIHKctVTcgNtryc58QAjvpQKOUQimfbzipU5lMXAtR/qxJGWgrMMZgAnDeeAPB3FzHZxjU
      sqBNTcX7l+Xl+gZECPjICPTpaRgbN1Y6WvaTgRlAFIZwS6WGcXLOOQzOY53MpCieZjIgVb1k
      i1evttX3iqZSUJoGkog3dTvFlqdSoKZZOfnVDAN6ElURQiB03VgupQXMdBqSUgRVny+VSsVd
      3ZO4vVdnb6Gb5uqa5zYmFV9ehnfsGFSXWhTxmRmkDhwAUSpWhkvSRYRS4Ok0jJGRvvUCqDu+
      QdxURFFjpbSEcsTDmpxs+FRo95CJl2VQlpd7kl4bOQ64UrDGxlAqlSrKE2FS/ALEGzyyRmE7
      0zSY6XTcnqleNVtyMkySjXpUlhqkFHqSbbrqwCypdGtUzVZ52YULcM+c6ep3E83NoVgqwbr7
      bmjj41BRBC8ppAl8H9HSEtLj4z2P9jSi7waglFrTf60mCkOEvl9RNqil3S+NAAjz+Z7KBEau
      C1epuDt7skGuvp9UCqlMBgRxG6ayyySVAuUckRAIhag8+QkhIAA4IXCuXYOs0+CaMAY9kwFL
      pRA0MCxK4mbZvu8jrHkNZwzi7FmEp09374uoQhYKcF94AXjHO1a5YjKKEAUBtB4epq1F3w1A
      JCV2rRL4fkPVYG4YbblAQVLi2GuE54EnNQBRFK0S71VSVtSrgThU6SRiWlLKFZOEEALiefDW
      KtIRAv7yMoJCAXoDASyWHNJZlgUzOUMA4miPf/483B5N/jKyVIL38svg+/ev/uUAe4r13QDa
      zdORNVr71ejpNPwmmvPV9GPyl4lKJViZDCghcGtCmCKXQ5DPQ/o+CGNg6TRIOg3CWOzjI56Y
      UCpWVW5xo66EgL+4CJZOr0hVppTGUpBJPL/cOwEAolwOzjprsltFLC+DXrwIbNxY+ZsxTYMC
      KlmujPOKSEE/GIgL1K33UM5hjY7CbVacvZ5OMZ2iFLxcDtb4OEylYumUUgni4kU4tRvha9dA
      TRP6jh0Quh4rW1AKFgQtT/7q+4pSCanJSYAx+K4LGUXwEiNcESKVEs6xY3FMv0+Ely7B3rQJ
      QVmvSUp4Vd9HFEUIfB9WUmnXa/q+8+gkzLXWezTbhrXGJorqOrQ+9JutR5hMPt0wYCgFceZM
      3YJ0AJCeB/+ttyq/V1HUsXgVpISfFMrXPjw8x6m4P+G1awgXFjq7R6dICe/UKRDOIept2JGU
      ZrZY67xe+m4A7Vo1TSIcjVBCILp+HWppCapQAEvkS6hpxv6wZSHqQ5Pq+oNTCMvSKidPNn3S
      qiiCvHABlmGAJgdfnSI8D0GDFIyyYXg99vsbIa5fh5HkMDWidi/UK/ruAjFNqytL2Ig12+Yo
      hdJbbyGscoFEGMLauxdRkiBGqkKQgyB0HNDE/WkF6bqQuVzb5Zn1UEGwImu1DKUUslRCeP36
      uu/REUrBv3QJanZ2zZf14+82EBeo1RaYrErctR7C81ZMfgAQpRLCfL6yyeunf1sPGUVw5+fb
      eo+/sLCuJt9lSJL8V41mGKCUIrh2rf/7oirCFu7fj7OBgZw+MM5hJfkma70m1eQ1Db9AKeF7
      Xhz1uAFSndrdyIputTRSqiIlzziHlUrBtCwoANGgnv7lobkuyBoPJ0JIXzbBAzkJLufP29ks
      Qt+PT0qFgFxchLh4ESSXgwxDLEsJappg4+PQZ2ehbdoEcF4xCppIFUZVMXJqGEAqVYmpo9Ww
      q5/D3/zDs8hu2IyH7z3UWKZDKVy6PIdsClD2RmRaqR9pc+NPOV9V79wRhMS1AokrUbmmUm0l
      qvUEKaFLiaCBiIFhWV2ppmvG4GqCkxNOjRBEr78O/4UXEDVxFahtwzx8GPaDD4KNjcWp1Pv2
      wT1/HlGhAGZZMGdnoRKhKsZ5Y5W2WvIXMbb/EczmfojnzyxiM1+CI1Pwr59DiY9j74yF7/3o
      VWzaeSdmRkxcO/tjiO2tGQAxTag2EuG00VGEWH89sSJkRVqy73nQkuzZVlYld+kC/uyF09iz
      ZQse3b9rXWOpR1Asgo+MxCf05WxXxqCbZl+e/sAADUBJCe/YMRS+9a2W5RFlqQTnuefgvvAC
      7IcfRvrRR0E1DfauXVBKIfB9OJ5X0e7U2qwNfu6pv8M5zcdPvEfg2e+/jo9+8H14/vxx/PDY
      k9jzi7+MvVvnwLNjePXYj7F3vPXrauPjCJJON01hDMhmQR1n3RthbppYsZOoeqK2MpYocDG5
      eRcOb53Ai8dfRcEn2DZh47VzF3HHHUdw7vTL8AOBQ4fvw6kTL0HPzmBK8/Hm3CLuPnQPNo+s
      nd5ApISu64h8HyRpco5EAr5fDGQPoKII+SeewPL//b8daYOqMETxySdx/ctfhkhi5SKK4Nc8
      1bwaHf9m7N57Jw7vmcKluQLu2LMHqnQdS0LHpukJzJ87hmNXI4za7WcuMtOE2STiUUbfuBHQ
      ddB1dkkkjMHKZisCAYQQmEm7pOQHzS+iFC7PX8HlpRyul1w8ePBOlEpFgAQ49tYVpEbG8d67
      78DZC+dhj+3EI/tm8fxrbwIqwtVC8yo4xhi8YjE+rBOi0sSwUe/nXtD/k+AowvJf/iW8V15Z
      97XCc+ew+KUvYfyTn0TUYjF3Q0Z3YkfqLWjp3bh32yZ4QQjTNHBomwO6fw9STMCLgKLr48F7
      74HJJVSLtySUAuPjYK4LcfVq/Q0uIeBTU9BmZuJCG9uGct2OzzCMbDbOkwpDkDCM846qqtYI
      502LXKhm4J69+3FgYxquV4TOCPKOC003oYPD0hkI5RjNbsDchTfwjHKxa3YaCwHBdLp5clsk
      RN2VqHwQlspkel4f0Nd6AKUUCt/6Vnck0avQtmyB/fM/H+ve1N7T81rfCPcIns3GrohS0KMI
      /pUrkEk9AqEUxDBgbNwImU7DqPJ/ZRiiMDfXdiiXGQbAWN0yTKbrsEZHUXjuOYgOq9S6hXb4
      MNCg9JEQArtBX4Ru0tcVwH/zzc6L39cgvHgR3lNPgT/66KpWSNw0V6X/9hNCKXiixUkohbQs
      kK1bwaSEqetxjhCAkBBojFXOL4QQiKSEPjaGYGmpZSPglhXXJzd4vQgCOIuLoLY9WANgDDSV
      wuCOKGP6tgdQYYj8E090XCzdDO9HP4KWy4FzXmk2oQiBHFChRRmm69ANA6lUCpqmvX28Tym8
      KIKo0kgNwxBBEMSyKsUifM9DKARIJgNu22v67ZTzuHldkky3FjKKoAaUH1WG2jbYGmNgVeHu
      no6j53dIcF99FaKXiVdRBPe552DZNgzTfFv2D4gjKwNCS0S34iE2f4pXN7OrQAiIbWNkyxZo
      2Sy4bcddGhFHeuzpaWQ2b4Zm2w0b560inR7o92Js3AjTtut2yiyLm90yBqCUiiVPeoz/5puQ
      dYrFyYCqjSjn0JJoDmMMRlVeU1lFrh515VWEAGEs7hVcKEAsL1fyeZyLFxEWi7HP3+qWjjHw
      iVp11T7BGLSNGxEEAWgiSkyT1kyaYcDOZjsWOW6XvhiAWF5GdOVKz++jfB/BmTPQkoQ7IH6a
      aJYF9FFqo0y5Z1h1f+Ly5I6iqO4TTq8q+q+GJkJdztmzcapEFTIIUDp/Hn6bIWVz586BVGOx
      qSm4SbpKGIaQABSlsDIZmLbd1yL5vhhANDfXNZWBZgTnz4NSCtu2wRir6Oqv5W/2AqJpiACU
      CgW4pRKisrRh9Wuq8l3Kk36V+5P8zjQMOJcvr3k67C8stL4CUIrQNMF6KD1eF85BtmxZ9WOl
      VN0ezb2mPwbQhu/vFxfwas6DkA5evriIN+bmUXLyeGm+tZac5XuV9TQrrYsAoF+uECFAItNe
      zmt36qRCcM4rK0K1O6QAaLpe2cybpglE0aon/yrWiP7UoiVJcda+fT1Vd65F37Wrboo2EKc/
      9zt1vS8GIFvUwgEAIXzkQgEogWUnwNX8Ep4+P4c9E/WLvRvdK6zTAohoWu//2IRAS3qCrUAp
      UEIq7plhGJX/rpV6B+LNcNk4XM9D0OJ3yDlvKidOOYdm23Hjb8ZgHznSlw2xvmkTjG3b1nxN
      v2WqBhsjrAMlBFIqKCWhKEUkIgRSAW3mR9b9IgmBMTICvUe6k4RSpCYmVign12JZFtLpdGVD
      bJpm5d/lVaCerqdocWIwTYM9MVE3ugLE0jCarkOWSiBRBM4YtMlJ2AcPrluley20DRuQPnKk
      6eZ2vZqm7dKXnSFtw/8205MoXjyBv50H7t+9DwtLCjtGLbx29Tru2zTZ8r14dcy9CiFE3B7I
      NGua9K0PyjmsZOI1WsY554g8D8Jx4kbZifJyJW9f06CZZqz9WSO2q6dSiBJV6LXg6XRsBBs2
      VAR9pRAQjhM3nI6iFRIrLueQo6PQN28GoRSlV1/tehGRPjOD9NGj8WdUCpqur16hETcb77c0
      Yl8MoK1wG9XwwQMHK/+c2Rhv0u5r0YZYci8tUUILqwSmALx9Kqxp8WlkEECuZ4NOCHTbXiHx
      xxiDaVlvy6crBXge3OvX4wzPek/zqsxPjxAQ0wQZGYmL+nU97sYyOQl3bq7hULRMJm6GgaQ5
      hmWBGwbcq1chG6RjqyiCt7CAsFiEvXkzMraN0ksvdadegFJYd9wBa/fuSnVXedWjhCAIgooC
      hp58zn7THwOYmYknXB8iQXqSdVn+og3DqOjhlKonQdIRhmYyUJ4H5fvtK0RzDmIYUJq2ui+A
      roNrGvylJfjXr7cXBVMKynVjhQhdB52ejvOFJiYqE7YWZtuwarqpKKXgXruGoIWUB+F5KF2+
      jPTsLNIPPYTSyZOIzp/vqL0rAGiTk0jt31/p2lNNuSAqTArjpVJtd+jsFn0xADY2Bm16GuHF
      iz29D9F16Dt2vP3vshT6Gq6OEALQtNj9YAy+44AlTTJkdYdHQoCk5ZAiBFHVz6MwRBRFsNPp
      io+rpIRz+XIsxbgOZBCgdOECwrExpGZmYE5PQ8tmEebzkEEAoRSUrgOGgZLjxBtsy4pXQM9D
      0MbZgHBd+EtLCHUdZMsWmJs3Q1y5EoexW1gRiKaBT0/DmJ2FNjZWEeGqRSkF13VXuIpBEFRW
      gn7SFwMghMC6++6eG4CxezdYlTRgue2RUgoE8SFTUOVqUMagaVrcITHZMxDDiDU6gwBExT10
      dcOA53nxNlzTIHx/9R9WKXiui1Q6DRVFKJ4/3xXp9TLB0hKk78OenQW3LHDLqvQNrh6JlDLW
      XrXtjkSA/eVlkMnJOJeKMWDTJhizszAZQ7S0BFEoxA0yklVVEhIbYDoNkvQi84GKphFN1O40
      XQdNWrGKJPe/ljAMb00DAADr6FGUnn4aopmKW6cwBvuRRwAAwnEQzs8jXFqCTLq5gxDIpF6Y
      ZLPQJydhWFas7Z9EbYQQFWUyAPF7pIyFapMSzrXyeaQQkFGE0rlzXZE1qSVyHBQvXEB661YQ
      SlcVAFXjOw5kBwdLKgyhJ51fNE1DGIbgSVF9+TBRKQURRbGimxBrVnBJIRAIgcD343SQOr3X
      BknfDIDqOjLvfz+Wv/rVnshxpO66CySdRuH55+PGGvXyaaqiH5GuQ2zdCmvnzkrPgXJnx6Bm
      8jLGwBMtI845vDXqe51Ll3oy+csIx4Fz5QpSGzeu2fxuPYdKouxaSbkqMiOlhO+6daM4Ta8r
      BJxiMT7kq1MM324Jazfo6zmAeeAAUu94R9evyyYnQWdnkX/2WYSNKq5qUEEA7+RJLD/1FIIr
      V1aGHGuWYU3TYFSlNDcK1clCIW631GPCXA5BLte0drbTkGK5x0A5SlNGJhO4k8lfTRgEgBAV
      1QdCSOVgsN/01QAIIRj54Adh1JPI7hCayYDv3o3g8uWOag2U56H44otw33qrkrSmGwZS5aQs
      QuC6Lrxk0+Y4DlTSUXLFOJRqqbdZt/CuXVtT84gl5wptQyn0VCou0awydiklnFKpK4JdQHJQ
      qRRs215xMNhv+q8Mp2kY/bmfg3X33ev2BdnUFLSDB9cvoqoU3BMn4J48GR9KEQKFt6X5VKLu
      7Hlepf2RYVkVKe9UOg3q+z0r9qk75CgCXLfupCGEwLQsaM06yNeBWRYiIeIs2sQAyk1NujX5
      y0gh4LeRJtMLBpIKQXUd2Y9+FNmPfhS0gz8SOIf90EMw77+/qwrC7okTCBJtonp9DEQUwbZt
      mIYB13Hig7YwhAjDlmLt3UYUCrAsq/KkJoRU+h37nhcfprWzChAS1y8np9DlLjWB7/dMpSEK
      w3W7VOthcMJYlCJ1990w9u6F8/zzcH/8Y4jFxbXfY1kw9++H/dBDUISg8Pzz3R2UUii99hr4
      +Hj9J2syuYKaJ6G3vNzX5htlZBhC+j6sJLdJRBGcKjcsAkCz2fh7beFBYU1Ngds2wmQfwzmP
      9wI9Vtf2XbeyMe43N0afYKXihtZzcwjOnUN07VocwquSRtS2bIE+Oxun0iqF3Pe+15GmUCuk
      9u+HvmMHnFJpxSaQcQ7GWKW9axm5tAQ1gFx2ADDGx5FKToCdYrHuymVqGrz5echGT1pKwbJZ
      kCRFmlEK3TTj9q6+3xc3xbSsNYWQe8XAO8UDqKQq67OzlVSGtQgXF3s2+QHAO38e5s6dsNNp
      hEkkRAhR+R9BktgmBBil68slWieR666oOKsHNQxktm9HWCggLBQgks72VNOgZzIQSbOKsjsZ
      SQnpOLAzmb65J0EQrC2F3yNuDANok6DH5ZWyVEK0vAxtfDwusAdQqDpDUIj78VpJdmbY0L1I
      DEcqaD1SOZBJk3GRnFqv2qgSUolmaSMj0EZG4DtO3DyDECjDqOvfyyqF7X5QbtoxNIAmKKX6
      0tghWlyENv62ACjnfIW+kOd5UEqBJwrM9fDy8/ibp1/EaDqNI3e9A2MmQSQJTJ3HPXtB4vSL
      pCGeaehwHAdcN8Ep4Ps+uG6CQMWtTIVYJRqrhIDjOHGb1WSyV09ajXO4+XzcWzjJZQo8720p
      Ft9vWAwT9vBArx5CiL41xytz0xkAhKivbBx5+LPvPo20kcI9h+/Gluwa+dMiwIWci9nxbOOX
      1MT0zcQnLp+wllMigjVaGZ15/Q088K7HcOZH30Pg5PCNp36I5WKAhw/uwPfPLeCxvRvwN2+U
      QHJnMJXehne97yiefepZLMHC/gmJxdBGBAZNuHjnoW14+QrFgwdqXMSy65LoC9npNKKkmowA
      cAuFyviUlG+3TSpLzHPeOBOzTnPB82++jBdPnMf07B48eHQvACDyHJy6eAV6kIM2vQ9bJjrT
      NVVJYmI/uekMQEVR/YiGFBiZ2oL3zI7g5cVlXLlyEoemR3Hct3Du2GuY3LIdtljCxbzAwwd2
      4/xyEUFuDq9fnMPhw/dje3blBqx2w0gIqZwQVxeuk7KwVZ1JNDph4+xcDgd3bsGJ0xdxrRTi
      4M6dMDSG++5/JzbjAg4d2Q/vnI/NxjTmr14ASU+geP4S2JYtePDofXj5tR9hR2YE33j+HD74
      2KOrPzel8eqUxO6llJW8eneNpuC6ZcWJaroOp1hctX8oF+zX7gHmL13GzLY9uGv/7srPlBQ4
      dfzHoKkteGRjDn/9+LehZ6ewbTqDi+cuYO+BA3jttWMYmdmOWTvES2+cwaEHfgK7Nq6U2B5E
      POaGK4lcD6dOvY4v/dMrOLR5CrlSATJykQ+AbDqFSESwrRQMTuEHPhYdD4uFAmhYwMtXGifo
      KaUQuC6c5WUUr19H8fp1SN8HxduFL41a+czsvgv8+pv4wck57Dl4J+7bvRmlUGJkfBobUjpg
      TWB2hGP77A5MbJrA5Ng0mPBw5747MD21CToDZmdmsHHHHlAlkK7jqRBKESUuj0jcofJEWst/
      55oG3TTj5tm2vaJUkTIGy7brfq57fuKnMKn7+MYTT66QNSwV81CgOH/uJI48/AFMGC7mri3h
      yIOP4eSrP0YgJQq5JSwuLkIFebxx5lKdD9P/MOhNtwIQzut/UYTi7oP3YG+a4sTFOdAwwD++
      fhrTu0exrBR8x8FGQ4PjufAjIGsZ8JY8GKYNpq+eWVTXEYUh3FxulcisSPYCmmmCmyZoUn22
      ekgc9973zsq/N9zzQM0rprANAEbffpq+/11TK16xbdNmnDz+Mh5+4MH6X0hZWSL5Tsp5PCwR
      mmp0gFWtvcMYQyopkodSlTz+eu89dewlvHH2CkYnNuPSuXPYuHUrCGW48653whQFFNU4jj/9
      BPTMBmzbPI4RS8PRQ/vw9z96E5s2TMK7dhJGKgPbWl03ffueA7SBUgq5p56q9AXoFcbu3ZAT
      E01PmpmmAa6LcEBCs8bEBGQ6XXFhCCFIJ73VRBiilMutcoM004TZrP8a4vx8t4/5Tal0utLP
      oF/cdC4QIQR8vI32LJ3dBMI0W0qzEGEIOcD8di2TgWVZYElxT6pKU5NyjtTISMW9IZRCt6yW
      Jj/Qf4WGfskhVnPTGQAQqwz0EjIy0paIlqJ0IEKzVNchGUOpVIJIlOfKC7pSClEQIPC8OETK
      GLhhQLesll0NQkjfJmW/n/yV+w7krutEm5gAy2Qgqg6nugkdH29vQ5Z0dOm1W1YLz2bhV8Xq
      lZRwXRfpdBpesbgijq8Qt2sNfR+pTAY8iRSVS0YDz4vDp0lIlXEO3TCgNTgo6zaDygW6KVcA
      QimsvXt7cm1qmmCTzfWHatFGRuINep+gug5eJ5NWSQm3ZvKvfIGCUyhUTl5FFKGUy8UrRfIz
      Ve7VVShAJMXqPf0sjA1sBbgpDQCI3SC9RgZk3RCC1J13gnZQmE05R6pfQrOEQNuwAWGDMGfU
      LH8neeKXK7zWioP0IxfIbMMt6zY3rQEQQmAfPgyWSJB3A3PXLhgbNzaUFVwLpmnQslnoY2Nd
      G08jtNFRkCSGXyslzjlvqSQ0CsO4qL2F10oherYh1k1zIJvfMjetAQBJof19962QQukUc+dO
      pPbti5+ubablUs7BkqKU1MwMeI+0RwGAZzJQ6TTCRItIKQXLsmCaJux0uuW6WilE5TyjFXrh
      pmi6PhA5xGpuagMA4hK+kfvvhzE729FJItF12EeOIHXgwNvhQ8biutgWMdNpIPGnpZSwN2/u
      qByxGfroKMyZmRUywSo5uCpvIlv119v9pqQQsGy7a/KFmmHA7FMbpLW46Q7CGqGUQnjtGtyT
      JxEtLjZd2gnn0DdvhrV7N2gdH1RJCSeXQ9QkI1JL+pFFQVA5NyCUxolzjoNojXycliEE1tRU
      fOgl5UqJR8QqFuW6BcZYnCLdJI1ZM4y2umcyxmBns/H3HATwkzqE9j8KiZXrBhT1WTWeW8UA
      yigpIQoFBPPziJaWIB0nTqAjBETXwdJpaBMT0KemQJoUYCilEDgO/FJp1aFYua9Vsw0nAyAd
      B6LDijFmWeDZLMBYLCTLGCQhkEgOBRmr1O5WQ6rOBGrRkvOAUhthW54U/5cpl0qGNdIpjSCE
      xPetkoG/EbjlDKCacm5L5QncQKuy6XWkjN2bxJAY5/EmssVzCN2ywCmNdTeLxab1uYRSaJkM
      aCoVR3rq/ImYpsEaGUEYRXUV4izLQuC6K/385OmrJwpvpVyuZfEsK52u6/6oJDVcRFFc41B1
      vfJKyDhfIbFyI3FLG0CvkEKgcP16W66NPTYWR5ekjHsEuC5C14VMClWYroMZBliSYCeiCE6T
      /CKmadBsO47mVEEIQTrZgygp46zQRPkOVd1oQt+PdUSbwDhHKpNpOoHrTaUbcdJXc1OeBA8S
      lWSWti066zhIZbMApVCMISQEyjTfbuHKefzUT8KNXgtJaCIMwaMILKkWK6NXuXYkyQqtB9d1
      GEKsqTFaSY1uYSLf6JO9HkMD6ICmB011EEmVVuA4dft9iShCaXkZqaS/q2BCDwAAATxJREFU
      WKu1uJHvIzU6GvcUkzJ2N1qMqxNC4sIYzuG77op7ln12wzQb1jvcCgwNoANq6wNaQUmJ0HXX
      bnanFNxCoeKjtzSWZNJ2KitOCKk081BJuSdJaotvxid6uwwNoBMalEA2o5VOj0rKpqHXXkDK
      HXMGkNU6SG7dta2HdHR0X0cOvBHtxCUGmUZwKzA0gDYp+8bt0k5+EaG05ddrA04luNkZGkAH
      aGsUwteFEJgNiszrQRlrqWpLM4w1exIPac7QADqAEAKrjSxUM+nd2+pTnes6mKYhNTra0CfX
      LQtmnQ6MQ9pjeBDWIeWSQzefb1w7TEh8gprkGpVDnWttoJmmIZXNViZ2+T7lMGpZy+d2idL0
      mqEBrINyOWHougirNPQpY5V8m+pWoUqpOIUin6+70S2nN9xIuTK3Ov8/GS5SRo37OWAAAAAA
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Covid Analysis' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='New Deaths' width='192'>
      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
      zefzr5yC/f8D7b5xH+CSV/4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='TC card' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAD50lEQVR4nO3XT8hlYwCA8eebGQZhMd8gajZKkz8rU1PKkqUlC3Y2UhasbMRGTSlJSqT8
      WQw7CylZ2VhRJDGlbIz8iTssMGMm32vxnsVtsuT7rp7nV2/3ntvp7dw6zznvuzXGGCRSBwA4
      ehTOnNnjS0l23wxgtZojkdm31xeQ7KUCiFoBRK0AolYAUSuAqBVA1AogagUQtQKIWgFErQCi
      VgBRK4CoFUDUCiBqBRC1AohaAUStAKJWAFErgKgVQNQKIGoFELUCiFoBRK0AolYAUSuAqBVA
      1AogagUQtQKIWgFErQCiVgBRK4CoFUDUCiBqBRC1AohaAUStAKJWAFErgKgVQNQKIGoFELUC
      iFoBRK0AolYAUSuAqBVA1AogagUQtQKIWgFErQCiVgBRK4CoFUDUCiBqBRC1AohaAUStAKJW
      AFErgKgVQNQKIGoFELUCiFoBRK0AolYAUSuAqBVA1AogagUQtQKIWgFErQCiVgBRK4CoFUDU
      CiBqBRC1AohaAUStAPK/8D3wMfDbcjyAr4FPgD/XzvvuovPWnQU+Bb4EdpY5DvxH15v8a04C
      LwK3AtvACeBhZhRXAj8B7wIvAO8DR4DPgPeAa5Y5LgD3AdcCvwCXA68DjDHG2N4eAxqNjRvn
      YByD8fNyvLN8fr5834FxF4zTME7BuLD89hCMD9bm2YFxfm3O4zB+h9EbIBvtNHCO+cT/AXgE
      uBe4jflUf4b5VL8e2M9c2rwJfAUcW5tnC/gWeBn4AngcuIL2ANlwlwCXMZc3bwHPAT8y1/kP
      ALcArzFv/m+A+5lr/XeAqy6a62rgTuBB4G3gV9oDZMMdAQ4BHwE3AeeBS4FHgWeBG5k38iHg
      KeAe4G7gD+bNfZa5H7gZ+BC4g7kHOMXcPBdANto+4BXgaWAFPA8cBG4AnlzO2Q+8xHxTvLEM
      gCeY4RwEbmeG8Cpz43wCuA7YGmMMDh+G1Wo3/k+ya/5iLpkeY0byTwogam2Co1YAUSuAqBVA
      1AogagUQtQKIWgFErQCiVgBRK4CoFUDUCiBqBRC1AohaAUStAKJWAFErgKgVQNQKIGoFELUC
      iFoBRK0AolYAUSuAqBVA1AogagUQtQKIWgFErQCiVgBRK4CoFUDUCiBqBRC1AohaAUStAKJW
      AFErgKgVQNQKIGoFELUCiFoBRK0AolYAUSuAqBVA1AogagUQtQKIWgFErQCiVgBRK4CoFUDU
      CiBqBRC1AohaAUStAKJWAFErgKgVQNQKIGoFELUCiFoBRK0AolYAUSuAqBVA1AogagUQtQKI
      WgFErQCiVgBRK4CoFUDUCiBqBRC1AohaAUStAKL2NwGK2LvbQg32AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='TD card' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAADhElEQVR4nO3Ywcu1YwLH8e9r3jDqlYyFLCZKvdshS+U/sBwpS0UmGwvKgiysZyEWStnb
      WCk1o6amZqWElchW8bwKhQXH4jzysEN5e+b3+dTdOd3Xfdd16v6ec13nwuFwOASjLlZ1+XJd
      uXKVpwJ/vGMAJyfHA8Zcc7UnAFeTAJgmAKYJgGkCYJoAmCYApgmAaQJgmgCYJgCmCYBpAmCa
      AJgmAKYJgGkCYJoAmCYApgmAaQJgmgCYJgCmCYBpAmCaAJgmAKYJgGkCYJoAmCYApgmAaQJg
      mgCYJgCmCYBpAmCaAJgmAKYJgGkCYJoAmCYApgmAaQJgmgCYJgCmCYBpAmCaAJgmAKYJgGkC
      YJoAmCYApgmAaQJgmgCYJgCmCYBpAmCaAJgmAKYJgGkCYJoAmCYApgmAaQJgmgCYJgCmCYBp
      AmCaAJgmAKYJgGkCYJoAmCYApgmAaQJgmgCYJgCmCYBpAmCaAJgmAKYJgGkCYJoAmCYApl28
      2hOA3+qk+qi6s7r5F2MfVJ+fvv/L6TVVh+rt6rbq1gTAOfVW9VT1t+pC9fKZsUP1SHVHdW11
      Tz8F8Gb1aPVY9UQC4Bz6rnq2eq26veMDf9b31TfVS9X1Z85/Xb1QPVl91fHhtwfg3Pmi+rR6
      prq3erGfR/Bt9X51X/Vg9e7p+VeqB6obz1wrAM6dP50ez1evV29U75wZ/3P1WfWf6h8dlzvv
      dVwmfdpxGfTfjvsHSyDOnUvV3dW/On7Lf1HdVH3YcelzXccg7q0+Ob3+Usc1f9UNHX8lLlYX
      DofDoVtuqZOTP/IzwO9ypXqu+rh6uLq/eqjj5veu6p/V/6q/Vk+fvv7o3x3/Qfp7AuD/xJfV
      q9Xjv/I+ATDNJphpAmCaAJgmAKYJgGkCYJoAmCYApgmAaQJgmgCYJgCmCYBpAmCaAJgmAKYJ
      gGkCYJoAmCYApgmAaQJgmgCYJgCmCYBpAmCaAJgmAKYJgGkCYJoAmCYApgmAaQJgmgCYJgCm
      CYBpAmCaAJgmAKYJgGkCYJoAmCYApgmAaQJgmgCYJgCmCYBpAmCaAJgmAKYJgGkCYJoAmCYA
      pgmAaQJgmgCYJgCmCYBpAmCaAJgmAKYJgGkCYJoAmCYApgmAaQJgmgCYJgCmCYBpAmCaAJgm
      AKYJgGkCYJoAmCYApgmAaQJgmgCYJgCmCYBpAmCaAJgmAKYJgGk/ADRBVg+CUx1aAAAAAElF
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='TT card' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAD+ElEQVR4nO3YvYsdVQBA8bObxEVSxGIR/EhlsdoaRCz8+BM0ESsh6B+hhQoREmwFG4mg
      YiEIsRHsBQtjEbRQRBEEQZZIXjBKVGLCWNxZ9qEhBET3yTk/eOyb92aGWbhn5t63Nk3TRCK1
      H4CtLbh4cY8vJfnvjQAWi/FKZNb3+gKSvVQAUSuAqBVA1AogagUQtQKIWgFErQCiVgBRK4Co
      FUDUCiBqBRC1AohaAUStAKJWAFErgKgVQNQKIGoFELUCiFoBRK0AolYAUSuAqBVA1AogagUQ
      tQKIWgFErQCiVgBRK4CoFUDUCiBqBRC1AohaAUStAKJWAFErgKgVQNQKIGoFELUCiFoBRK0A
      olYAUSuAqBVA1AogagUQtQKIWgFErQCiVgBRK4CoFUDUCiBqBRC1AohaAUStAKJWAFErgKgV
      QNQKIGoFELUCiFoBRK0AolYAUSuAqBVA1AogagUQtQKIWgFErQCiVgBRK4CoFUDUCiBqBRC1
      AohaAUStAKJWAFErgKjt3+sLSK7nB2AbuA84uPT5NvD90vYh4N75/a/AT8Cd8/Zl4GvgVmCL
      v9/t/6AAsoLeAN5hDOy7gBNL330BvD+//wa4G3gbOAOcBJ4CXgSuAEeBw8AFYBM4zW4E54En
      gbVpmiY2N2Gx+Nf+oeRm/Q48BHzEuLtPwNp19puAY8BzwBHgXcYdfRt4af7+KnBgPucjwMfA
      xnz8JeBnWgNkxXzLGLjPAo8BHzAG8199yZjiPMAY5McZwexYA74Dnmfc6U+wO/iZ9z1MU6Cs
      mA3GnP914DfgCUYIy4P7KvAC8Aqw7wbnug14GHiQ8YR4lN31xAS8RgFkxdwD3AJ8BtzBGKgb
      wDngdsZd+5P5s/vnY64BC8a05jLwI2Pa8znjCXGBsXa4wlhArzOeEO9RAFkx68BbwCngF8aT
      YB9jrv/mvM+n8/aOS8DTS9vH53OcnY8/BLw6/30GeJnxi9FBWgTnf+Arxs+Zj//D85wHPmSs
      L3YUQNT6FShqBRC1AohaAUStAKJWAFErgKgVQNQKIGoFELUCiFoBRK0AolYAUSuAqBVA1Aog
      agUQtQKIWgFErQCiVgBRK4CoFUDUCiBqBRC1AohaAUStAKJWAFErgKgVQNQKIGoFELUCiFoB
      RK0AolYAUSuAqBVA1AogagUQtQKIWgFErQCiVgBRK4CoFUDUCiBqBRC1AohaAUStAKJWAFEr
      gKgVQNQKIGoFELUCiFoBRK0AolYAUSuAqBVA1AogagUQtQKIWgFErQCiVgBRK4CoFUDUCiBq
      BRC1AohaAUStAKJWAFErgKgVQNQKIGoFELUCiFoBRK0AolYAUSuAqBVA1Aogan8CDCFuNMQf
      UF0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Zones' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
